/*
 * AlphaSOC API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Threat struct for Threat
type Threat struct {
	Title string `json:"title"`
	Severity int32 `json:"severity"`
	Policy *bool `json:"policy,omitempty"`
}

// NewThreat instantiates a new Threat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreat(title string, severity int32) *Threat {
	this := Threat{}
	this.Title = title
	this.Severity = severity
	return &this
}

// NewThreatWithDefaults instantiates a new Threat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreatWithDefaults() *Threat {
	this := Threat{}
	return &this
}

// GetTitle returns the Title field value
func (o *Threat) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Threat) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Threat) SetTitle(v string) {
	o.Title = v
}

// GetSeverity returns the Severity field value
func (o *Threat) GetSeverity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *Threat) GetSeverityOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *Threat) SetSeverity(v int32) {
	o.Severity = v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *Threat) GetPolicy() bool {
	if o == nil || o.Policy == nil {
		var ret bool
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat) GetPolicyOk() (*bool, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *Threat) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given bool and assigns it to the Policy field.
func (o *Threat) SetPolicy(v bool) {
	o.Policy = &v
}

func (o Threat) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["severity"] = o.Severity
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableThreat struct {
	value *Threat
	isSet bool
}

func (v NullableThreat) Get() *Threat {
	return v.value
}

func (v *NullableThreat) Set(val *Threat) {
	v.value = val
	v.isSet = true
}

func (v NullableThreat) IsSet() bool {
	return v.isSet
}

func (v *NullableThreat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreat(val *Threat) *NullableThreat {
	return &NullableThreat{value: val, isSet: true}
}

func (v NullableThreat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


