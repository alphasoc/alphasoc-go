/*
 * AlphaSOC API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TlsEvent struct for TlsEvent
type TlsEvent struct {
	Ts *time.Time `json:"ts,omitempty"`
	SrcIP *string `json:"srcIP,omitempty"`
	SrcPort *int32 `json:"srcPort,omitempty"`
	SrcHost *string `json:"srcHost,omitempty"`
	SrcMac *string `json:"srcMac,omitempty"`
	SrcUser *string `json:"srcUser,omitempty"`
	SrcID *string `json:"srcID,omitempty"`
	CertHash *string `json:"certHash,omitempty"`
	Issuer *string `json:"issuer,omitempty"`
	Subject *string `json:"subject,omitempty"`
	ValidFrom *time.Time `json:"validFrom,omitempty"`
	ValidTo *time.Time `json:"validTo,omitempty"`
	DestIP *string `json:"destIP,omitempty"`
	DestPort *int32 `json:"destPort,omitempty"`
	Ja3 *string `json:"ja3,omitempty"`
	Ja3s *string `json:"ja3s,omitempty"`
}

// NewTlsEvent instantiates a new TlsEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsEvent() *TlsEvent {
	this := TlsEvent{}
	return &this
}

// NewTlsEventWithDefaults instantiates a new TlsEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsEventWithDefaults() *TlsEvent {
	this := TlsEvent{}
	return &this
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *TlsEvent) GetTs() time.Time {
	if o == nil || o.Ts == nil {
		var ret time.Time
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetTsOk() (*time.Time, bool) {
	if o == nil || o.Ts == nil {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *TlsEvent) HasTs() bool {
	if o != nil && o.Ts != nil {
		return true
	}

	return false
}

// SetTs gets a reference to the given time.Time and assigns it to the Ts field.
func (o *TlsEvent) SetTs(v time.Time) {
	o.Ts = &v
}

// GetSrcIP returns the SrcIP field value if set, zero value otherwise.
func (o *TlsEvent) GetSrcIP() string {
	if o == nil || o.SrcIP == nil {
		var ret string
		return ret
	}
	return *o.SrcIP
}

// GetSrcIPOk returns a tuple with the SrcIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetSrcIPOk() (*string, bool) {
	if o == nil || o.SrcIP == nil {
		return nil, false
	}
	return o.SrcIP, true
}

// HasSrcIP returns a boolean if a field has been set.
func (o *TlsEvent) HasSrcIP() bool {
	if o != nil && o.SrcIP != nil {
		return true
	}

	return false
}

// SetSrcIP gets a reference to the given string and assigns it to the SrcIP field.
func (o *TlsEvent) SetSrcIP(v string) {
	o.SrcIP = &v
}

// GetSrcPort returns the SrcPort field value if set, zero value otherwise.
func (o *TlsEvent) GetSrcPort() int32 {
	if o == nil || o.SrcPort == nil {
		var ret int32
		return ret
	}
	return *o.SrcPort
}

// GetSrcPortOk returns a tuple with the SrcPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetSrcPortOk() (*int32, bool) {
	if o == nil || o.SrcPort == nil {
		return nil, false
	}
	return o.SrcPort, true
}

// HasSrcPort returns a boolean if a field has been set.
func (o *TlsEvent) HasSrcPort() bool {
	if o != nil && o.SrcPort != nil {
		return true
	}

	return false
}

// SetSrcPort gets a reference to the given int32 and assigns it to the SrcPort field.
func (o *TlsEvent) SetSrcPort(v int32) {
	o.SrcPort = &v
}

// GetSrcHost returns the SrcHost field value if set, zero value otherwise.
func (o *TlsEvent) GetSrcHost() string {
	if o == nil || o.SrcHost == nil {
		var ret string
		return ret
	}
	return *o.SrcHost
}

// GetSrcHostOk returns a tuple with the SrcHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetSrcHostOk() (*string, bool) {
	if o == nil || o.SrcHost == nil {
		return nil, false
	}
	return o.SrcHost, true
}

// HasSrcHost returns a boolean if a field has been set.
func (o *TlsEvent) HasSrcHost() bool {
	if o != nil && o.SrcHost != nil {
		return true
	}

	return false
}

// SetSrcHost gets a reference to the given string and assigns it to the SrcHost field.
func (o *TlsEvent) SetSrcHost(v string) {
	o.SrcHost = &v
}

// GetSrcMac returns the SrcMac field value if set, zero value otherwise.
func (o *TlsEvent) GetSrcMac() string {
	if o == nil || o.SrcMac == nil {
		var ret string
		return ret
	}
	return *o.SrcMac
}

// GetSrcMacOk returns a tuple with the SrcMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetSrcMacOk() (*string, bool) {
	if o == nil || o.SrcMac == nil {
		return nil, false
	}
	return o.SrcMac, true
}

// HasSrcMac returns a boolean if a field has been set.
func (o *TlsEvent) HasSrcMac() bool {
	if o != nil && o.SrcMac != nil {
		return true
	}

	return false
}

// SetSrcMac gets a reference to the given string and assigns it to the SrcMac field.
func (o *TlsEvent) SetSrcMac(v string) {
	o.SrcMac = &v
}

// GetSrcUser returns the SrcUser field value if set, zero value otherwise.
func (o *TlsEvent) GetSrcUser() string {
	if o == nil || o.SrcUser == nil {
		var ret string
		return ret
	}
	return *o.SrcUser
}

// GetSrcUserOk returns a tuple with the SrcUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetSrcUserOk() (*string, bool) {
	if o == nil || o.SrcUser == nil {
		return nil, false
	}
	return o.SrcUser, true
}

// HasSrcUser returns a boolean if a field has been set.
func (o *TlsEvent) HasSrcUser() bool {
	if o != nil && o.SrcUser != nil {
		return true
	}

	return false
}

// SetSrcUser gets a reference to the given string and assigns it to the SrcUser field.
func (o *TlsEvent) SetSrcUser(v string) {
	o.SrcUser = &v
}

// GetSrcID returns the SrcID field value if set, zero value otherwise.
func (o *TlsEvent) GetSrcID() string {
	if o == nil || o.SrcID == nil {
		var ret string
		return ret
	}
	return *o.SrcID
}

// GetSrcIDOk returns a tuple with the SrcID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetSrcIDOk() (*string, bool) {
	if o == nil || o.SrcID == nil {
		return nil, false
	}
	return o.SrcID, true
}

// HasSrcID returns a boolean if a field has been set.
func (o *TlsEvent) HasSrcID() bool {
	if o != nil && o.SrcID != nil {
		return true
	}

	return false
}

// SetSrcID gets a reference to the given string and assigns it to the SrcID field.
func (o *TlsEvent) SetSrcID(v string) {
	o.SrcID = &v
}

// GetCertHash returns the CertHash field value if set, zero value otherwise.
func (o *TlsEvent) GetCertHash() string {
	if o == nil || o.CertHash == nil {
		var ret string
		return ret
	}
	return *o.CertHash
}

// GetCertHashOk returns a tuple with the CertHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetCertHashOk() (*string, bool) {
	if o == nil || o.CertHash == nil {
		return nil, false
	}
	return o.CertHash, true
}

// HasCertHash returns a boolean if a field has been set.
func (o *TlsEvent) HasCertHash() bool {
	if o != nil && o.CertHash != nil {
		return true
	}

	return false
}

// SetCertHash gets a reference to the given string and assigns it to the CertHash field.
func (o *TlsEvent) SetCertHash(v string) {
	o.CertHash = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *TlsEvent) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *TlsEvent) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *TlsEvent) SetIssuer(v string) {
	o.Issuer = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *TlsEvent) GetSubject() string {
	if o == nil || o.Subject == nil {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetSubjectOk() (*string, bool) {
	if o == nil || o.Subject == nil {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *TlsEvent) HasSubject() bool {
	if o != nil && o.Subject != nil {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *TlsEvent) SetSubject(v string) {
	o.Subject = &v
}

// GetValidFrom returns the ValidFrom field value if set, zero value otherwise.
func (o *TlsEvent) GetValidFrom() time.Time {
	if o == nil || o.ValidFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetValidFromOk() (*time.Time, bool) {
	if o == nil || o.ValidFrom == nil {
		return nil, false
	}
	return o.ValidFrom, true
}

// HasValidFrom returns a boolean if a field has been set.
func (o *TlsEvent) HasValidFrom() bool {
	if o != nil && o.ValidFrom != nil {
		return true
	}

	return false
}

// SetValidFrom gets a reference to the given time.Time and assigns it to the ValidFrom field.
func (o *TlsEvent) SetValidFrom(v time.Time) {
	o.ValidFrom = &v
}

// GetValidTo returns the ValidTo field value if set, zero value otherwise.
func (o *TlsEvent) GetValidTo() time.Time {
	if o == nil || o.ValidTo == nil {
		var ret time.Time
		return ret
	}
	return *o.ValidTo
}

// GetValidToOk returns a tuple with the ValidTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetValidToOk() (*time.Time, bool) {
	if o == nil || o.ValidTo == nil {
		return nil, false
	}
	return o.ValidTo, true
}

// HasValidTo returns a boolean if a field has been set.
func (o *TlsEvent) HasValidTo() bool {
	if o != nil && o.ValidTo != nil {
		return true
	}

	return false
}

// SetValidTo gets a reference to the given time.Time and assigns it to the ValidTo field.
func (o *TlsEvent) SetValidTo(v time.Time) {
	o.ValidTo = &v
}

// GetDestIP returns the DestIP field value if set, zero value otherwise.
func (o *TlsEvent) GetDestIP() string {
	if o == nil || o.DestIP == nil {
		var ret string
		return ret
	}
	return *o.DestIP
}

// GetDestIPOk returns a tuple with the DestIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetDestIPOk() (*string, bool) {
	if o == nil || o.DestIP == nil {
		return nil, false
	}
	return o.DestIP, true
}

// HasDestIP returns a boolean if a field has been set.
func (o *TlsEvent) HasDestIP() bool {
	if o != nil && o.DestIP != nil {
		return true
	}

	return false
}

// SetDestIP gets a reference to the given string and assigns it to the DestIP field.
func (o *TlsEvent) SetDestIP(v string) {
	o.DestIP = &v
}

// GetDestPort returns the DestPort field value if set, zero value otherwise.
func (o *TlsEvent) GetDestPort() int32 {
	if o == nil || o.DestPort == nil {
		var ret int32
		return ret
	}
	return *o.DestPort
}

// GetDestPortOk returns a tuple with the DestPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetDestPortOk() (*int32, bool) {
	if o == nil || o.DestPort == nil {
		return nil, false
	}
	return o.DestPort, true
}

// HasDestPort returns a boolean if a field has been set.
func (o *TlsEvent) HasDestPort() bool {
	if o != nil && o.DestPort != nil {
		return true
	}

	return false
}

// SetDestPort gets a reference to the given int32 and assigns it to the DestPort field.
func (o *TlsEvent) SetDestPort(v int32) {
	o.DestPort = &v
}

// GetJa3 returns the Ja3 field value if set, zero value otherwise.
func (o *TlsEvent) GetJa3() string {
	if o == nil || o.Ja3 == nil {
		var ret string
		return ret
	}
	return *o.Ja3
}

// GetJa3Ok returns a tuple with the Ja3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetJa3Ok() (*string, bool) {
	if o == nil || o.Ja3 == nil {
		return nil, false
	}
	return o.Ja3, true
}

// HasJa3 returns a boolean if a field has been set.
func (o *TlsEvent) HasJa3() bool {
	if o != nil && o.Ja3 != nil {
		return true
	}

	return false
}

// SetJa3 gets a reference to the given string and assigns it to the Ja3 field.
func (o *TlsEvent) SetJa3(v string) {
	o.Ja3 = &v
}

// GetJa3s returns the Ja3s field value if set, zero value otherwise.
func (o *TlsEvent) GetJa3s() string {
	if o == nil || o.Ja3s == nil {
		var ret string
		return ret
	}
	return *o.Ja3s
}

// GetJa3sOk returns a tuple with the Ja3s field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsEvent) GetJa3sOk() (*string, bool) {
	if o == nil || o.Ja3s == nil {
		return nil, false
	}
	return o.Ja3s, true
}

// HasJa3s returns a boolean if a field has been set.
func (o *TlsEvent) HasJa3s() bool {
	if o != nil && o.Ja3s != nil {
		return true
	}

	return false
}

// SetJa3s gets a reference to the given string and assigns it to the Ja3s field.
func (o *TlsEvent) SetJa3s(v string) {
	o.Ja3s = &v
}

func (o TlsEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ts != nil {
		toSerialize["ts"] = o.Ts
	}
	if o.SrcIP != nil {
		toSerialize["srcIP"] = o.SrcIP
	}
	if o.SrcPort != nil {
		toSerialize["srcPort"] = o.SrcPort
	}
	if o.SrcHost != nil {
		toSerialize["srcHost"] = o.SrcHost
	}
	if o.SrcMac != nil {
		toSerialize["srcMac"] = o.SrcMac
	}
	if o.SrcUser != nil {
		toSerialize["srcUser"] = o.SrcUser
	}
	if o.SrcID != nil {
		toSerialize["srcID"] = o.SrcID
	}
	if o.CertHash != nil {
		toSerialize["certHash"] = o.CertHash
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.Subject != nil {
		toSerialize["subject"] = o.Subject
	}
	if o.ValidFrom != nil {
		toSerialize["validFrom"] = o.ValidFrom
	}
	if o.ValidTo != nil {
		toSerialize["validTo"] = o.ValidTo
	}
	if o.DestIP != nil {
		toSerialize["destIP"] = o.DestIP
	}
	if o.DestPort != nil {
		toSerialize["destPort"] = o.DestPort
	}
	if o.Ja3 != nil {
		toSerialize["ja3"] = o.Ja3
	}
	if o.Ja3s != nil {
		toSerialize["ja3s"] = o.Ja3s
	}
	return json.Marshal(toSerialize)
}

type NullableTlsEvent struct {
	value *TlsEvent
	isSet bool
}

func (v NullableTlsEvent) Get() *TlsEvent {
	return v.value
}

func (v *NullableTlsEvent) Set(val *TlsEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsEvent(val *TlsEvent) *NullableTlsEvent {
	return &NullableTlsEvent{value: val, isSet: true}
}

func (v NullableTlsEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


