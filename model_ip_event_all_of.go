/*
 * AlphaSOC API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IpEventAllOf struct for IpEventAllOf
type IpEventAllOf struct {
	DestIP *string `json:"destIP,omitempty"`
	DestPort *int32 `json:"destPort,omitempty"`
	Proto *string `json:"proto,omitempty"`
	BytesIn *int64 `json:"bytesIn,omitempty"`
	BytesOut *int64 `json:"bytesOut,omitempty"`
	App *string `json:"app,omitempty"`
	Action *string `json:"action,omitempty"`
	Duration *float64 `json:"duration,omitempty"`
}

// NewIpEventAllOf instantiates a new IpEventAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpEventAllOf() *IpEventAllOf {
	this := IpEventAllOf{}
	return &this
}

// NewIpEventAllOfWithDefaults instantiates a new IpEventAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpEventAllOfWithDefaults() *IpEventAllOf {
	this := IpEventAllOf{}
	return &this
}

// GetDestIP returns the DestIP field value if set, zero value otherwise.
func (o *IpEventAllOf) GetDestIP() string {
	if o == nil || o.DestIP == nil {
		var ret string
		return ret
	}
	return *o.DestIP
}

// GetDestIPOk returns a tuple with the DestIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpEventAllOf) GetDestIPOk() (*string, bool) {
	if o == nil || o.DestIP == nil {
		return nil, false
	}
	return o.DestIP, true
}

// HasDestIP returns a boolean if a field has been set.
func (o *IpEventAllOf) HasDestIP() bool {
	if o != nil && o.DestIP != nil {
		return true
	}

	return false
}

// SetDestIP gets a reference to the given string and assigns it to the DestIP field.
func (o *IpEventAllOf) SetDestIP(v string) {
	o.DestIP = &v
}

// GetDestPort returns the DestPort field value if set, zero value otherwise.
func (o *IpEventAllOf) GetDestPort() int32 {
	if o == nil || o.DestPort == nil {
		var ret int32
		return ret
	}
	return *o.DestPort
}

// GetDestPortOk returns a tuple with the DestPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpEventAllOf) GetDestPortOk() (*int32, bool) {
	if o == nil || o.DestPort == nil {
		return nil, false
	}
	return o.DestPort, true
}

// HasDestPort returns a boolean if a field has been set.
func (o *IpEventAllOf) HasDestPort() bool {
	if o != nil && o.DestPort != nil {
		return true
	}

	return false
}

// SetDestPort gets a reference to the given int32 and assigns it to the DestPort field.
func (o *IpEventAllOf) SetDestPort(v int32) {
	o.DestPort = &v
}

// GetProto returns the Proto field value if set, zero value otherwise.
func (o *IpEventAllOf) GetProto() string {
	if o == nil || o.Proto == nil {
		var ret string
		return ret
	}
	return *o.Proto
}

// GetProtoOk returns a tuple with the Proto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpEventAllOf) GetProtoOk() (*string, bool) {
	if o == nil || o.Proto == nil {
		return nil, false
	}
	return o.Proto, true
}

// HasProto returns a boolean if a field has been set.
func (o *IpEventAllOf) HasProto() bool {
	if o != nil && o.Proto != nil {
		return true
	}

	return false
}

// SetProto gets a reference to the given string and assigns it to the Proto field.
func (o *IpEventAllOf) SetProto(v string) {
	o.Proto = &v
}

// GetBytesIn returns the BytesIn field value if set, zero value otherwise.
func (o *IpEventAllOf) GetBytesIn() int64 {
	if o == nil || o.BytesIn == nil {
		var ret int64
		return ret
	}
	return *o.BytesIn
}

// GetBytesInOk returns a tuple with the BytesIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpEventAllOf) GetBytesInOk() (*int64, bool) {
	if o == nil || o.BytesIn == nil {
		return nil, false
	}
	return o.BytesIn, true
}

// HasBytesIn returns a boolean if a field has been set.
func (o *IpEventAllOf) HasBytesIn() bool {
	if o != nil && o.BytesIn != nil {
		return true
	}

	return false
}

// SetBytesIn gets a reference to the given int64 and assigns it to the BytesIn field.
func (o *IpEventAllOf) SetBytesIn(v int64) {
	o.BytesIn = &v
}

// GetBytesOut returns the BytesOut field value if set, zero value otherwise.
func (o *IpEventAllOf) GetBytesOut() int64 {
	if o == nil || o.BytesOut == nil {
		var ret int64
		return ret
	}
	return *o.BytesOut
}

// GetBytesOutOk returns a tuple with the BytesOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpEventAllOf) GetBytesOutOk() (*int64, bool) {
	if o == nil || o.BytesOut == nil {
		return nil, false
	}
	return o.BytesOut, true
}

// HasBytesOut returns a boolean if a field has been set.
func (o *IpEventAllOf) HasBytesOut() bool {
	if o != nil && o.BytesOut != nil {
		return true
	}

	return false
}

// SetBytesOut gets a reference to the given int64 and assigns it to the BytesOut field.
func (o *IpEventAllOf) SetBytesOut(v int64) {
	o.BytesOut = &v
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *IpEventAllOf) GetApp() string {
	if o == nil || o.App == nil {
		var ret string
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpEventAllOf) GetAppOk() (*string, bool) {
	if o == nil || o.App == nil {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *IpEventAllOf) HasApp() bool {
	if o != nil && o.App != nil {
		return true
	}

	return false
}

// SetApp gets a reference to the given string and assigns it to the App field.
func (o *IpEventAllOf) SetApp(v string) {
	o.App = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *IpEventAllOf) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpEventAllOf) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *IpEventAllOf) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *IpEventAllOf) SetAction(v string) {
	o.Action = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *IpEventAllOf) GetDuration() float64 {
	if o == nil || o.Duration == nil {
		var ret float64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpEventAllOf) GetDurationOk() (*float64, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *IpEventAllOf) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float64 and assigns it to the Duration field.
func (o *IpEventAllOf) SetDuration(v float64) {
	o.Duration = &v
}

func (o IpEventAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestIP != nil {
		toSerialize["destIP"] = o.DestIP
	}
	if o.DestPort != nil {
		toSerialize["destPort"] = o.DestPort
	}
	if o.Proto != nil {
		toSerialize["proto"] = o.Proto
	}
	if o.BytesIn != nil {
		toSerialize["bytesIn"] = o.BytesIn
	}
	if o.BytesOut != nil {
		toSerialize["bytesOut"] = o.BytesOut
	}
	if o.App != nil {
		toSerialize["app"] = o.App
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	return json.Marshal(toSerialize)
}

type NullableIpEventAllOf struct {
	value *IpEventAllOf
	isSet bool
}

func (v NullableIpEventAllOf) Get() *IpEventAllOf {
	return v.value
}

func (v *NullableIpEventAllOf) Set(val *IpEventAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIpEventAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIpEventAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpEventAllOf(val *IpEventAllOf) *NullableIpEventAllOf {
	return &NullableIpEventAllOf{value: val, isSet: true}
}

func (v NullableIpEventAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpEventAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


