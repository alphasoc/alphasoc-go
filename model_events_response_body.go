/*
 * AlphaSOC API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EventsResponseBody struct for EventsResponseBody
type EventsResponseBody struct {
	Received *int32 `json:"received,omitempty"`
	Accepted *int32 `json:"accepted,omitempty"`
}

// NewEventsResponseBody instantiates a new EventsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsResponseBody() *EventsResponseBody {
	this := EventsResponseBody{}
	return &this
}

// NewEventsResponseBodyWithDefaults instantiates a new EventsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsResponseBodyWithDefaults() *EventsResponseBody {
	this := EventsResponseBody{}
	return &this
}

// GetReceived returns the Received field value if set, zero value otherwise.
func (o *EventsResponseBody) GetReceived() int32 {
	if o == nil || o.Received == nil {
		var ret int32
		return ret
	}
	return *o.Received
}

// GetReceivedOk returns a tuple with the Received field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsResponseBody) GetReceivedOk() (*int32, bool) {
	if o == nil || o.Received == nil {
		return nil, false
	}
	return o.Received, true
}

// HasReceived returns a boolean if a field has been set.
func (o *EventsResponseBody) HasReceived() bool {
	if o != nil && o.Received != nil {
		return true
	}

	return false
}

// SetReceived gets a reference to the given int32 and assigns it to the Received field.
func (o *EventsResponseBody) SetReceived(v int32) {
	o.Received = &v
}

// GetAccepted returns the Accepted field value if set, zero value otherwise.
func (o *EventsResponseBody) GetAccepted() int32 {
	if o == nil || o.Accepted == nil {
		var ret int32
		return ret
	}
	return *o.Accepted
}

// GetAcceptedOk returns a tuple with the Accepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsResponseBody) GetAcceptedOk() (*int32, bool) {
	if o == nil || o.Accepted == nil {
		return nil, false
	}
	return o.Accepted, true
}

// HasAccepted returns a boolean if a field has been set.
func (o *EventsResponseBody) HasAccepted() bool {
	if o != nil && o.Accepted != nil {
		return true
	}

	return false
}

// SetAccepted gets a reference to the given int32 and assigns it to the Accepted field.
func (o *EventsResponseBody) SetAccepted(v int32) {
	o.Accepted = &v
}

func (o EventsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Received != nil {
		toSerialize["received"] = o.Received
	}
	if o.Accepted != nil {
		toSerialize["accepted"] = o.Accepted
	}
	return json.Marshal(toSerialize)
}

type NullableEventsResponseBody struct {
	value *EventsResponseBody
	isSet bool
}

func (v NullableEventsResponseBody) Get() *EventsResponseBody {
	return v.value
}

func (v *NullableEventsResponseBody) Set(val *EventsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsResponseBody(val *EventsResponseBody) *NullableEventsResponseBody {
	return &NullableEventsResponseBody{value: val, isSet: true}
}

func (v NullableEventsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


